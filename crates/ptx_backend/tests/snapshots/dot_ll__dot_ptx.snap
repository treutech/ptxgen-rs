---
source: crates/ptx_backend/tests/dot_ll.rs
expression: actual
---
.version 7.0
.target sm_75
.address_size 64

// Function: dot
// Block: %entry
// Block: %loop
// Block: %body
// Block: %exit
.reg .f32 %0, %acc, %i, %new_sum, %prod, %result, %sum, %x_, %xval, %y_, %yval;
.reg .s32 %1, %idx, %n, %next;
.reg .pred %cond;
.entry dot {
        // local stack allocation: i
        // local stack allocation: sum
        st.global.f32 i, 0;
        st.global.f32 sum, 0;
        ld.global.f32 idx, i;
        setp.lt.s32 cond, idx, n;
        // address calc: x_ = x[idx]
        // address calc: y_ = y[idx]
        ld.global.f32 xval, x_;
        ld.global.f32 yval, y_;
        fmul.f32 prod, xval, yval;
        ld.global.f32 acc, sum;
        fadd.f32 new_sum, acc, prod;
        st.global.f32 sum, new_sum;
        add.s32 next, idx, 1;
        st.global.f32 i, next;
        ld.global.f32 result, sum;
}
