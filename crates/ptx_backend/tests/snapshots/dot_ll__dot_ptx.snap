---
source: crates/ptx_backend/tests/dot_ll.rs
expression: actual
---
// Function: dot
// Block: %entry
// Function: saxpy
.version 7.0
.target sm_75
.address_size 64

.reg .f32 %sum, %0, %i;

.entry saxpy {
    // local stack allocation: i
    // local stack allocation: sum
    st.global.f32 i, 0;
    st.global.f32 sum, 0;
}
// Block: %loop
// Function: saxpy
.version 7.0
.target sm_75
.address_size 64

.reg .f32 %idx, %i;
.reg .s32 %idx, %n;
.reg .pred %cond;

.entry saxpy {
    ld.global.f32 idx, i;
    setp.lt.s32 cond, idx, n;
}
// Block: %body
// Function: saxpy
.version 7.0
.target sm_75
.address_size 64

.reg .f32 %sum, %acc, %new_sum, %xval, %yval, %x_, %i, %next, %y_, %prod;
.reg .s32 %1, %idx, %next;

.entry saxpy {
    // address calc: x_ = x[idx]
    // address calc: y_ = y[idx]
    ld.global.f32 xval, x_;
    ld.global.f32 yval, y_;
    fmul.f32 prod, xval, yval;
    ld.global.f32 acc, sum;
    fadd.f32 new_sum, acc, prod;
    st.global.f32 sum, new_sum;
    add.s32 next, idx, 1;
    st.global.f32 i, next;
}
// Block: %exit
// Function: saxpy
.version 7.0
.target sm_75
.address_size 64

.reg .f32 %sum, %result;

.entry saxpy {
    ld.global.f32 result, sum;
}
